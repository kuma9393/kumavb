dependencies {
    implementation("com.google.cloud:google-cloud-bigquery:2.42.0")
    implementation("com.google.auth:google-auth-library-oauth2-http:1.23.0")
}

import android.content.Context
import android.util.Log
import com.google.auth.oauth2.GoogleCredentials
import com.google.cloud.bigquery.BigQuery
import com.google.cloud.bigquery.BigQueryOptions
import com.google.cloud.bigquery.QueryJobConfiguration
import com.google.cloud.bigquery.TableResult
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.withContext
import java.io.InputStream

suspend fun runBigQuery(context: Context) {
    withContext(Dispatchers.IO) {
        try {
            // サービスアカウントキーの読み込み
            val credentialsStream: InputStream = context.resources.openRawResource(R.raw.service_account)
            val credentials = GoogleCredentials.fromStream(credentialsStream)

            // BigQuery クライアント作成
            val bigquery: BigQuery = BigQueryOptions.newBuilder()
                .setCredentials(credentials)
                .build()
                .service

            // 実行したいクエリ
            val query = "SELECT name, age FROM `project.dataset.table` LIMIT 10"

            val queryConfig = QueryJobConfiguration.newBuilder(query).build()
            val result: TableResult = bigquery.query(queryConfig)

            // 結果を出力
            for (row in result.iterateAll()) {
                val name = row["name"].stringValue
                val age = row["age"].longValue
                Log.d("BigQuery", "name=$name, age=$age")
            }

        } catch (e: Exception) {
            Log.e("BigQueryError", "Error querying BigQuery: ${e.message}", e)
        }
    }
}
